import json
import os
from dotenv import load_dotenv
from data_collectors.helix_api import get_times_stream_info, get_streamer_id
from data_collectors.emote import load_emotes
from data_collectors.chat_download import download_chat_to_file
from data_collectors.category_parser import process_url  # –î–æ–±–∞–≤–ª–µ–Ω –ø–∞—Ä—Å–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π


load_dotenv()
PROJECT_ROOT = os.getenv('PROJECT_ROOT')

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
OUTPUT_DIR = os.path.join(PROJECT_ROOT, 'stream_data')
os.makedirs(OUTPUT_DIR, exist_ok=True)


def check_existing_data(video_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏."""
    output_path = os.path.join(OUTPUT_DIR, f"{video_id}.json")
    return os.path.exists(output_path)


def collect_stream_data(video_id):
    """–°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—â—ë –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."""

    # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∞–µ–º –∏ –≤—ã—Ö–æ–¥–∏–º
    if check_existing_data(video_id):
        print(f"‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –¥–ª—è {video_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä.")
        return "exists"

    # 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VOD
    vod_info = get_times_stream_info(video_id)
    if not vod_info:
        return None  # –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ VOD

    # 2. –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Å—Ç—Ä–∏–º–µ—Ä–∞
    user_id = get_streamer_id(video_id)
    if not user_id:
        return None  # –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å—Ç—Ä–∏–º–µ—Ä–∞

    # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º —ç–º–æ—É—Ç—ã —Å—Ç—Ä–∏–º–µ—Ä–∞
    emotes = load_emotes(user_id)

    # 4. –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏
    chat_data = download_chat_to_file(video_id)

    # 5. –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—Å–º–µ–Ω–∞ –∏–≥—Ä –∏ —Ä–∞–∑–¥–µ–ª–æ–≤)
    categories = process_url(video_id)

    # 6. –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    stream_data = {
        "video_id": video_id,
        "user_id": user_id,
        "vod_info": vod_info,
        "emotes": emotes,
        "chat": chat_data,
        "categories": categories  # –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    }

    return stream_data


def save_stream_data(video_id, stream_data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –≤ JSON-—Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω–∏ –µ—â—ë –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."""
    output_path = os.path.join(OUTPUT_DIR, f"{video_id}.json")

    if check_existing_data(video_id):
        print(f"‚ö†Ô∏è –§–∞–π–ª {output_path} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        return output_path

    try:
        with open(output_path, "w", encoding="utf-8") as f:
            json.dump(stream_data, f, ensure_ascii=False, indent=4)
        print(f"üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_path}")
        return output_path
    except IOError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return None


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    video_id = "2406296141"
    data = collect_stream_data(video_id)

    if data == "exists":
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É.")
    elif data:
        save_stream_data(video_id, data)
        print("üéâ –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à—ë–Ω.")
    else:
        print("‚ùå –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –Ω–µ —É–¥–∞–ª—Å—è.")